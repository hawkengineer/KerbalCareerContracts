// Contract Objectives:
//		1) Orbit the moon(s) around the home planet
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= CrewMoonOrbit
	sortKey				= 160
	group				= Kerbal Exploration Division
	agent				= Kerbal Exploration Division
	title				= #CrewMoonOrbit_1
	genericTitle		= #CrewMoonOrbit_2
	synopsis			= #CrewMoonOrbit_3
	description			= #CrewMoonOrbit_4
	genericDescription 	= #CrewMoonOrbit_5
	minExpiry			= 5.0
	maxExpiry			= 100.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #CrewMoonOrbit_6
	maxCompletions		= 1
	maxSimultaneous		= 1
	//
	targetBody			= @/targetBodyValid1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.5
	rewardReputation	= @KerbalCareerContracts:rewardRep * 1.0	
	rewardFunds			= @KerbalCareerContracts:baseComp * 2.0
	advanceFunds		= @KerbalCareerContracts:baseAdv * 0.5
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------

	DATA_EXPAND
	{
		type 				= CelestialBody
		targetBody1			= @KerbalCareerContracts:homeMoons
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}		

	DATA
	{
		type = double
		SpaceThreshold 	= @/targetBody.SpaceAltitudeThreshold()
		AtmLimit 		= @/targetBody.AtmosphereAltitude()
		PlanetSOI 		= @/targetBody.SphereOfInfluence()
		maxPeOrbit		= @/SpaceThreshold - (@/SpaceThreshold - (@/AtmLimit*0.3))
		minApOrbit		= @/SpaceThreshold + ((@MoonSOI - @/SpaceThreshold) *0.3)		
		//
		targetAlt1		= @/maxPeOrbit / 1000
		targetAlt2		= @/minApOrbit / 1000
		title 			= #GENERIC_Altitudes
	}

	
	// Contract Requirements --------------------------------------------------------------------------------------------------
	
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= CrewOrbit30
		title			= #GENERIC_REQ_1
	}

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			KED_Contracts	= $KED_Contracts + 1
		}
	}
	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	
	// Objective #1: Launch and send a kerbal into orbit
	PARAMETER
	{
		name = CrewMoonOrbit
		type = VesselParameterGroup
		title = #CrewMoonOrbit_7
		define = CrewMoonOrbit
		disableOnStateChange = false

		PARAMETER
		{
			name	= NewVessel
			type	= NewVessel
			title	= #GENERIC_NV
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Ship
			title 		= #GENERIC_NT_SH
		}
		PARAMETER
		{
			name	= HasCrew
			type	= HasCrew
			minCrew	= 1
			maxCrew	= 3
		}
		PARAMETER
		{
			name 		= Orbit
			type 		= Orbit
			maxPeA 		= @/maxPeOrbit
			minApA		= @/minApOrbit
			situation 	= ORBITING
			title = #CrewMoonOrbit_8
			completeInSequence = true
		}
		PARAMETER
		{
			name 				= Duration
			type				= Duration
			duration			= 7d			
			preWaitText			= #CrewMoonOrbit_14
			waitingText			= #CrewMoonOrbit_15
			completionText 		= #CrewMoonOrbit_16
			completeInSequence 	= true
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			//optional		= true
			situation		= InSpaceLow
			experiment		= crewReport
			recoveryMethod	= Ideal
			title 			= #CrewMoonOrbit_9
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			//optional		= true
			situation		= InSpaceHigh
			experiment		= crewReport
			recoveryMethod	= Ideal
			title 			= #CrewMoonOrbit_10
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= true
			situation		= InSpaceLow
			experiment		= evaReport
			recoveryMethod	= Ideal
			title 			= #CrewMoonOrbit_11
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= true
			situation		= InSpaceHigh
			experiment		= evaReport
			recoveryMethod	= Ideal
			title 			= #CrewMoonOrbit_12
		}
	}
	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		targetBody = HomeWorld()
		title = #CrewMoonOrbit_13
		completeInSequence = true
	}
	PARAMETER
	{
		name 			= KerbalDeaths
		type 			= KerbalDeaths	
		countMax 		= 1
		vessel 			= CrewMoonOrbit
		title			= #GENERIC_NoDeaths
	}
		

}