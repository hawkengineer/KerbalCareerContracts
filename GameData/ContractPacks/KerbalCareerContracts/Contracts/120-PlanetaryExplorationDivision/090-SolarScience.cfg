
CONTRACT_TYPE
{
	name 			= SolarScienceHigh
	sortKey 		= 180
	group 			= Planetary Exploration Division
	agent			= Planetary Exploration Division
	title			= #SolarScienceHigh_1
	genericTitle	= #SolarScienceHigh_2
	topic			= Exploration
	synopsis 		= #SolarScienceHigh_3
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 50
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= #SolarScienceHigh_4
	//genericDescription 	= #SolarScienceHigh_5
	completedMessage	= #SolarScienceHigh_6
		
	// Contract Reweards
	prestige			= Trivial										// Possible values are: Trivial , Significant , Exceptional 
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.1
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.2	
	rewardFunds			= @KerbalCareerContracts:baseComp * 0.7
	advanceFunds		= @KerbalCareerContracts:baseAdv * 0.4							
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= HomeWorld().Parent()
	}	
 	DATA
	{
		type			= List<ScienceExperiment>
		hidden			= true
		experiment1		= AvailableExperiments(@/targetBody)
	}	
	DATA
	{
		type = int
		selectRoll 		= Random(1, 2)
		requiredValue 	= true
		title			= Random select either surface or space science
		
		//
	}
	DATA
	{
		type = string
		requiredValue = true
		scienceType = @/selectRoll == 1 ? "Low Science" : "High Science"
		title 	= Select either Low or High Space Science
	}

	DATA
	{
		//[ SrfLanded, SrfSplashed, FlyingLow, FlyingHigh, InSpaceLow, InSpaceHigh ]
		//
		type			= List<ScienceSubject>
        hidden 			= false
		requiredValue 	= false
		//
		// Identify science to retrieve in space around the moon
		//
		scienceListTemp1		= AllScienceSubjectsExperiment([@targetBody], @experiment1) 
		scienceListTemp2		= @/selectRoll == 1 ? @scienceListTemp1.Where(s => s.Situation() == InSpaceLow ) : @scienceListTemp1.Where(s => s.Situation() == InSpaceHigh)
		scienceListTemp3		= @/scienceListTemp2.Where(s => s.RemainingScience() / s.TotalScience() >= 0.1)
		scienceList				= @/scienceListTemp3.Random(3)
		//
		title					= Select science list for either Low or High Space Science
	}

 	// Science recovery: transmit, recover, or ideal.
    DATA
    {
		type = ScienceRecoveryMethod
        hidden = true
        recoveryMethod = Ideal
    }
	DATA
	{
		type			= int
		requiredValue 	= false
		numMoons		= @KerbalCareerContracts:homeMoons.Count()
		numMoonsOrbit	= @KerbalCareerContracts:orbitedMoons.Count()
	}	
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @/numMoons == @/numMoonsOrbit
		title = #SolarScienceHigh_MSG1
	}
	REQUIREMENT
	{
		type = Expression
		title = #SolarScienceHigh_MSG3
		expression = @/scienceList.Count() >= 1
	}
	REQUIREMENT
	{
		name	 	= Orbit
		type 		= Orbit
		checkType 	= UNMANNED
		title 		= #GENERIC_REQ_3
	}
	
	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			PED_Contracts	= $PED_Contracts + 1
		}
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	// Objective #1: Send a mission to collect the identified science measurements
	PARAMETER
	{
		name 	= SolarScience
		type	= VesselParameterGroup
		title 	= #SolarScienceHigh_7
		completedMessage = #SolarScienceHigh_8
		rewardFunds = @/KerbalCareerContracts:baseComp * 0.1
		//
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}

		PARAMETER
		{
			name 				= CollectSurfaceScience
			type 				= CollectScience
			subject 			= @sunScienceID
			recoveryMethod 		= Ideal
			rewardFunds 		= @KerbalCareerContracts:baseComp * 0.3
			completedMessage 	= #SolarScienceHigh_9
			title 				= #SolarScienceHigh_10
			ITERATOR
			{
				type = ScienceSubject
				sunScienceID = @/scienceList4
				REQUIREMENT
				{
					type = Expression
					expression = @../scienceList4.Count() > 0
				}
			}

		}


	}

}	
		
	