// Contract Objectives:
//		1) Enter Orbit around the planet, collect science
//		2) Enter orbit around any moons orbiting the target planet
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= PlanetOrbit
	sortKey				= 100
	group				= Planetary Exploration Division
	agent				= Planetary Exploration Division
	title				= #PlanetOrbit_1
	genericTitle		= #PlanetOrbit1
	synopsis			= #PlanetOrbit_2
	description			= #PlanetOrbit_3
	genericDescription 	= #PlanetOrbit_4
	minExpiry			= 5.0
	maxExpiry			= 100.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #PlanetOrbit_5
	maxCompletions		= 1
	maxSimultaneous		= 1
	//
	targetBody			= @/targetBodyValid1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.5
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.9	
	rewardFunds			= @KerbalCareerContracts:baseComp * 1.5
	advanceFunds		= @KerbalCareerContracts:baseAdv * 0.5
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------

	DATA_EXPAND
	{
		type 				= CelestialBody
		targetBody1			= @KerbalCareerContracts:homeSystemPlanets
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}		

	DATA
	{
		type = double
		SpaceThreshold 	= @/targetBody.SpaceAltitudeThreshold()
		AtmLimit 		= @/targetBody.AtmosphereAltitude()
		PlanetSOI 		= @/targetBody.SphereOfInfluence()
		maxPeOrbit		= @/SpaceThreshold - (@/SpaceThreshold - (@/AtmLimit*0.3))
		minApOrbit		= @/SpaceThreshold + ((@PlanetSOI - @/SpaceThreshold) *0.3)
		//
		targetAlt2		= @/maxPeOrbit / 1000
		targetAlt3		= @/minApOrbit / 1000
		title 			= #PlanetOrbit_6
	}
	DATA
	{
		type				= List<CelestialBody>
		requiredValue		= false
		targetList		 	= @KerbalCareerContracts:nextBodies
		reachedList			= @KerbalCareerContracts:reachedPlanets	
		pMoonList			= @targetBody.Children()							// Find the list of moons in orbit around the planet
		
	}

	DATA
	{
		type				= int
		requiredValue 		= false
		numHomeMoons		= @/KerbalCareerContracts:homeMoons.Count()
		numMoonsOrbit		= @/KerbalCareerContracts:orbitedMoons.Count()
		numMoons			= @/pMoonList.Count()								// Find the number of Moons in orbit around the planet
			
	}			
	
	// Contract Requirements --------------------------------------------------------------------------------------------------
	
	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @/numHomeMoons == @/numMoonsOrbit
		title = #GENERIC_REQ_7
	}
	REQUIREMENT
	{
		name = NextPlanetCheck
		type = Expression
		expression = (@/targetList.Contains(@/targetBodyValid1) || @/reachedList.Contains(@/targetBodyValid1))  == true
		title = #GENERIC_REQ_8
	}


	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			PED_Contracts	= $PED_Contracts + 1
		}
	}
	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	
	// Objective #1: Orbit the target Planet
	PARAMETER
	{
		name = PlanetOrbitProbe
		type = VesselParameterGroup
		title = #PlanetOrbit_7
		define = PlanetOrbitProbe
		disableOnStateChange = false
		completedMessage = #PlanetOrbit_8
		rewardFunds = @/KerbalCareerContracts:baseComp * 0.5

		PARAMETER
		{
			name	= NewVessel
			type	= NewVessel
			title	= #GENERIC_NV
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
			title 		= #GENERIC_NT_PB
		}
		PARAMETER
		{
			name	= HasCrew
			type	= HasCrew
			minCrew	= 0
			maxCrew	= 0
		}
		PARAMETER
        {
            name 		= OrbitPlanet
            type 		= Orbit
			situation 	= ORBITING
			maxPeA 		= @/maxPeOrbit
			minApA 		= @/minApOrbit
			title 		= #PlanetOrbit_9
			completeInSequence = true
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= true
			situation		= InSpaceLow
			recoveryMethod	= Transmit
			title 			= #PlanetOrbit_10
			completeInSequence = true
		}
	}
	// Objective #2: Enter Orbit around each moon
	PARAMETER
	{
		REQUIREMENT
		{
			name 		= PlanetMoonCheck
			type 		= Expression
			expression 	= @/pMoonList.Count() >= 1
			title		= #PlanetOrbit_11
		}	
	
		name = PlanetMoonOrbit
		type = VesselParameterGroup
		title = #PlanetOrbit_12
		define = PlanetMoonOrbit
		disableOnStateChange = false
		completedMessage = #PlanetOrbit_13
		rewardFunds = @/KerbalCareerContracts:baseComp * 0.5

		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
			title 		= #GENERIC_NT_PB
		}
		PARAMETER
		{
			name	= HasCrew
			type	= HasCrew
			minCrew	= 0
			maxCrew	= 0
		}
		PARAMETER
        {
            name 		= OrbitMoon
            type 		= ReachState
			situation 	= ORBITING
			targetBody 	= @/PlanetMoonOrbit/moonTarget
			maxPeA		= @/PlanetMoonOrbit/moonTarget.SpaceAltitudeThreshold() * 0.9
            title 		= #PlanetOrbit_14
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= false
			targetBody 		= @/PlanetMoonOrbit/moonTarget
			situation		= InSpaceLow
			recoveryMethod	= Transmit
			title			= #PlanetOrbit_15
		}
		ITERATOR
		{
			type			= CelestialBody
			moonTarget		= @/pMoonList
			
			REQUIREMENT
			{
				type = Expression
				expression = @../pMoonList.Count() > 0
			}
		}
		
		
    }
	

 
}