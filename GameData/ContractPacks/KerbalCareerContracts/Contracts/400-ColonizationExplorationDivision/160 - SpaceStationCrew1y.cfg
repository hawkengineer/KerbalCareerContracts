/ Contract Objectives:
//		1)  Send a crew to a space station for 6-months
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= SpaceStationCrew1y
	sortKey				= 160
	group				= Colonization Exploration Division
	agent				= Colonization Exploration Division
	title				= #SpaceStationCrew1y_1
	genericTitle		= #SpaceStationCrew1y_2
	synopsis			= #SpaceStationCrew1y_3
	description			= #SpaceStationCrew1y_4
	genericDescription 	= #SpaceStationCrew1y_5
	minExpiry			= 5.0
	maxExpiry			= 14.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #SpaceStationCrew1y_6
	maxCompletions		= 1
	maxSimultaneous		= 1
	//
	targetBody			= @/targetBody1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Exceptional									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.5 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 1.5 
	advanceFunds		= @KerbalCareerContracts:baseAdv * 1.0 
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------
	//
	DATA
    {
        type = Vessel
		uniquenessCheck = CONTRACT_ACTIVE
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.CrewCapacity() > 0).Random()
		title = #SpaceStationCrew1y_7
    } 

	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
	}

	DATA
    {
        type = List<Kerbal>
        targetKerbals = @targetVessel1.Crew()
		hidden = true
    }
	
	DATA
	{	
		type 				= int
		requiredValue 		= true
		title				= #SpaceStationCrew1y_8
		stationCapacity		= @/targetVessel1.CrewCapacity()
		stationEmpty		= @/targetVessel1.EmptyCrewSpace()
		crewNum				= Random(1, @/stationEmpty)
	}

 	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//	
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationCore
		title			= #GENERIC_REQ_1
	}

	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationScience
		title			= #GENERIC_REQ_1
	}

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CED_Contracts	= $CED_Contracts + 1
		}
	}	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  
    PARAMETER
    {
        name 		= Crew1Year
        type 		= VesselParameterGroup
        title 		= #SpaceStationCrew1y_9

		PARAMETER
		{	
			name = NewVessel
			type = NewVessel
			title = #SpaceStationCrew1y_11
			hideChildren = true
		}			

        //Check for a Docking Port
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			
			partModule = ModuleDockingNode
			minCount = 1
		}
		PARAMETER
		{
			name			= CrewTeam
			type			= HasCrew
			minCrew			= @/crewNum
			title			= #SpaceStationCrew1y_17
		}
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = @/targetVessel1
			distance = 100
			title = #SpaceStationCrew1y_13
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			vessel = @/targetVessel1
			title = #SpaceStationCrew1y_12
			hideChildren = true
			completeInSequence = true
		}		
	}

	//Begins a 1-day countdown. Station must be in orbit for 1 days for contract to complete
	PARAMETER
	{
		name 			= Duration
		type 			= Duration
		duration 		= 1y
		preWaitText 	= #SpaceStationCrew1y_14
		waitingText 	= #SpaceStationCrew1y_15
		completionText 	= #SpaceStationCrew1y_16
		startCriteria 	= PARAMETER_COMPLETION
		parameter 		= Crew1Year
	}
	PARAMETER
	{
		name = CrewReturn
		type = VesselParameterGroup
		title = #SpaceStationCrew1y_18
		define = CrewReturn
		completeInSequence = true
		
		PARAMETER
		{
			name 				= ReturnHome
			type 				= ReturnHome
			targetBody 			= HomeWorld()
			title 				= #SpaceStationCrew1y_19
			hideChildren 		= true
			completeInSequence 	= true
		}
		
		PARAMETER
		{
			name 	= RecoverKerbal
			type 	= RecoverKerbal
			kerbal 	= @/targetKerbals
		}		
	}
}	