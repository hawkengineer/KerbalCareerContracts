/ Contract Objectives:
//		1)  Add a monopropellant capacity to existing space station
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= StationScienceExp
	sortKey				= 300
	group				= Colonization Exploration Division
	agent				= Colonization Exploration Division
	title				= #StationScienceExp_1
	genericTitle		= #StationScienceExp_2
	synopsis			= #StationScienceExp_3
	description			= #StationScienceExp_4
	genericDescription 	= #StationScienceExp_5
	minExpiry			= 3.0
	maxExpiry			= 7.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #StationScienceExp_6
	maxCompletions		= 0
	maxSimultaneous		= 1
	//
	targetBody			= @/targetBody1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.5 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 1.5 
	advanceFunds		= @KerbalCareerContracts:baseAdv * 1.0 
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------
	//
	DATA
    {
        type 			= Vessel
		uniquenessCheck = CONTRACT_ACTIVE
		requiredValue 	= true
        targetVessel1 	= AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()>0).Random()
		title 			= #StationScienceExp_7
    } 

	DATA
	{
		type 			= CelestialBody
		requiredValue 	= true
		targetBody1 	= @/targetVessel1.CelestialBody()
		hidden 			= true
	}
	DATA
	{
		type = List<ScienceSubject>
		hidden = true
		
		TempSub1 = AllScienceSubjectsByBody([@targetBody]).Where(v => v.Situation() == InSpaceLow)
		TempSub2 = @TempSub1.Where(v => v.Experiment() != evaReport && v.Experiment() != crewReport)
		TempSub3 = @TempSub2.Where(v => v.CollectedScience() > 0)
		
	}

	DATA
	{
		type = ScienceSubject
		hidden = true
		uniquenessCheck = CONTRACT_ACTIVE
		scienceSubject = @TempSub3.SelectUnique()
	}

	DATA
    {
        type = ScienceExperiment

        uniquenessCheck = CONTRACT_ACTIVE
        hidden = true

        experimentToPerform = @scienceSubject.Experiment()
    }

 	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//	
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationCore
		title			= #GENERIC_REQ_1
	}

	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationScience
		minCount 		= 0
		checkOnActiveContract = false
		cooldownDuration = 15d
		title			= #GENERIC_REQ_1
	}
	REQUIREMENT
	{
		name = StationCheck
		type = Expression
		checkOnActiveContract = false
		title = #StationScienceExp_8-2
		expression = (@/targetVessel1.IsOrbiting())
	}
	REQUIREMENT
	{
		name = RandomRoll
		type = Expression
		checkOnActiveContract = false
		expression = @KerbalCareerContracts:randomRoll > 6
		title = #StationScienceExp_8
	}	
	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked

		partModule = ModuleDockingNode
	}

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CED_Contracts	= $CED_Contracts + 1
		}
	}	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  

	PARAMETER
	{
	
		name		= Sequence
		type		= Sequence
		
		PARAMETER
		{
			name	= Docking
			type	= Docking
			vessel 	= @/targetVessel1
			title 	= #StationScienceExp_9
		}
		PARAMETER
		{
			name 			= CollectScience
			type 			= CollectScience
			experiment 		= @/experimentToPerform
			recoveryMethod 	= Recover
			hideChildren 	= true
			title 			= #StationScienceExp_11
		}
	}			

}	