/ Contract Objectives:
//		1)  Add a life support supplies capacity to existing space station
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= StationCrewRotate
	sortKey				= 260
	group				= Colonization Exploration Division
	agent				= Colonization Exploration Division
	title				= #StationCrewRotate_1
	genericTitle		= #StationCrewRotate_2
	synopsis			= #StationCrewRotate_3
	description			= #StationCrewRotate_4
	genericDescription 	= #StationCrewRotate_5
	minExpiry			= 3.0
	maxExpiry			= 10.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #StationCrewRotate_6
	maxCompletions		= 0
	maxSimultaneous		= 2
	//
	targetBody			= @/targetBody1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.5 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 2.0 
	advanceFunds		= @KerbalCareerContracts:baseAdv * 1.0 
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------
	//
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.IsOrbiting() &&  v.CrewCount() > 0 ).SelectUnique()
		title = #StationCrewRotate_7
	}
	DATA
	{
		type 			= CelestialBody
		requiredValue 	= true
		targetBody1 	= @/targetVessel1.CelestialBody()
		hidden 			= true
	}
	DATA
    {
        type 			= List<Kerbal>
        targetKerbals 	= @targetVessel1.Crew()
		hidden 			= true
    }
	DATA
	{
		type 			= int
		requiredValue 	= false
		curCrew			= @/targetKerbals.Count()
	}

 	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//	
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationCore
		title			= #GENERIC_REQ_1
	}

	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationScience
		title			= #GENERIC_REQ_1
	}
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationCrew1y
		title			= #GENERIC_REQ_1
	}
	REQUIREMENT
	{
		name 					= Expression
		type 					= Expression
		checkOnActiveContract 	= false
		expression 				= @KerbalCareerContracts:randomRoll > 6
		title 					= #StationCrewRotate_8
	}
	REQUIREMENT
	{
		name			= StationCapacity
		type			= Expression
		expression		= @/targetVessel1.CrewCapacity() >= 2
		title			= #StationCrewRotate_8-2
	}
	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		partModule = ModuleDockingNode
	}

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CED_Contracts	= $CED_Contracts + 1
		}
	}	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  
    PARAMETER
    {
        name 		= NewCrewRotation
        type 		= VesselParameterGroup
        title 		= #StationCrewRotate_9


		PARAMETER
		{	
			name = NewVessel
			type = NewVessel
			title = #StationCrewRotate_11
			hideChildren = true
		}			

        //Check for a Docking Port
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
		}
		PARAMETER
		{
			name			= NewCrewRotation
			type			= HasCrew
			minCrew  		= 2
			title			= #StationCrewRotate_18
		}

		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = @/targetVessel1
			distance = 100
			title = #StationCrewRotate_13
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			vessel = @/targetVessel1
			title = #StationCrewRotate_12
			hideChildren = true
			completeInSequence = true
		}				
	}
    PARAMETER
    {
        name 				= ReturnCrew
        type 				= VesselParameterGroup
        title 				= #StationCrewRotate_19
		completeInSequence 	= true
		
		PARAMETER
		{
			name 				= ReturnHome
			type 				= ReturnHome
			targetBody 			= HomeWorld()
			title 				= #StationCrewRotate_20
			hideChildren 		= true
			completeInSequence 	= true
		}
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbals
		}
		
	}		
	
}	