/ Contract Objectives:
//		1)  Add a life support supplies capacity to existing space station
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE:NEEDS[TACLifeSupport|USILifeSupport|IFILifeSupport|Kerbalism|Snacks]
{
	name				= StationLifeResupply
	sortKey				= 240
	group				= Colonization Exploration Division
	agent				= Colonization Exploration Division
	title				= #StationLifeResupply_1
	genericTitle		= #StationLifeResupply_2
	synopsis			= #StationLifeResupply_3
	description			= #StationLifeResupply_4
	genericDescription 	= #StationLifeResupply_5
	minExpiry			= 3.0
	maxExpiry			= 10.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #StationLifeResupply_6
	maxCompletions		= 0
	maxSimultaneous		= 4
	//
	targetBody			= @/targetBody1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.5 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 2.0 
	advanceFunds		= @KerbalCareerContracts:baseAdv * 1.0 
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------
	//
	DATA:NEEDS[USILifeSupport]
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.IsOrbiting() &&  v.CrewCount() > 0 && (v.ResourceQuantity(Supplies) / v.ResourceCapacity(Supplies))<=0.5).SelectUnique()
		title = #StationLifeResupply_7
	}
	DATA:NEEDS[TACLifeSupport]
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.IsOrbiting() &&  v.CrewCount() > 0  && (v.ResourceQuantity(Food) / v.ResourceCapacity(Food))<=0.5).SelectUnique()
		title = #StationLifeResupply_7
	}
	DATA:NEEDS[Kerbalism]
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.IsOrbiting() &&  v.CrewCount() > 0  && (v.ResourceQuantity(Food) / v.ResourceCapacity(Food))<=0.5 || (v.ResourceQuantity(Water) / v.ResourceCapacity(Water))<=0.5 || (v.ResourceQuantity(Oxygen) / v.ResourceCapacity(Oxygen))<=0.5).SelectUnique()
		title = #StationLifeResupply_7
	}
	DATA:NEEDS[Snacks]
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.IsOrbiting() &&  v.CrewCount() > 0  && (v.ResourceQuantity(Snacks) / v.ResourceCapacity(Snacks))<=0.5).SelectUnique()
		title = #StationLifeResupply_7
	}
	DATA:NEEDS[IFILifeSupport]
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.IsOrbiting() &&  v.CrewCount() > 0  && (v.ResourceQuantity(LifeSupport) / v.ResourceCapacity(LifeSupport))<=0.5).SelectUnique()
		title = #StationLifeResupply_7
	}
	DATA
	{
		type 			= CelestialBody
		requiredValue 	= true
		targetBody1 	= @/targetVessel1.CelestialBody()
		hidden 			= true
	}
	DATA:NEEDS[USILifeSupport]
	{
		type				= Double
		requiredValue		= true
		title				= #StationLifeResupply_8
		lifeSupplies		= @/targetVessel1.ResourceCapacity(Supplies) - @/targetVessel1.ResourceQuantity(Supplies)
	}
	DATA:NEEDS[USILifeSupport]
	{
		type				= string
		requiredValue		= true
		title				= #StationLifeResupply_8-2
		lifeType			= "Supplies"
	}	
	DATA:NEEDS[TACLifeSupport]
	{
		type				= Double
		requiredValue		= true
		title				= #StationLifeResupply_8
		lifeSupplies		= @/targetVessel1.ResourceCapacity(Food) - @/targetVessel1.ResourceQuantity(Food)
	}
	DATA:NEEDS[TACLifeSupport]
	{
		type				= string
		requiredValue		= true
		title				= #StationLifeResupply_8-2
		lifeType			= "Food"
	}		
	DATA:NEEDS[IFILifeSupport]
	{
		type				= Double
		requiredValue		= true
		title				= #StationLifeResupply_8
		lifeSupplies		= @/targetVessel1.ResourceCapacity(LifeSupport) - @/targetVessel1.ResourceQuantity(LifeSupport)
	}
	DATA:NEEDS[IFILifeSupport]
	{
		type				= string
		requiredValue		= true
		title				= #StationLifeResupply_8-2
		lifeType			= "LifeSupport"
	}		
	DATA:NEEDS[Snacks]
	{
		type				= Double
		requiredValue		= true
		title				= #StationLifeResupply_8
		lifeSupplies		= @/targetVessel1.ResourceCapacity(Snacks) - @/targetVessel1.ResourceQuantity(Snacks)
	}
	DATA:NEEDS[Snacks]
	{
		type				= string
		requiredValue		= true
		title				= #StationLifeResupply_8-2
		lifeType			= "Snacks"
	}		
	DATA:NEEDS[Kerbalism]
	{
		type				= Double
		requiredValue		= true
		title				= #StationLifeResupply_8
		lifeSupplies		= @/targetVessel1.ResourceCapacity(Food) - @/targetVessel1.ResourceQuantity(Food)
		lifeWater			= @/targetVessel1.ResourceCapacity(Water) - @/targetVessel1.ResourceQuantity(Water)
	}
	DATA:NEEDS[Kerbalism]
	{
		type				= string
		requiredValue		= true
		title				= #StationLifeResupply_8-2
		lifeType			= "Food & Water"
	}	

 	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//	
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationCore
		title			= #GENERIC_REQ_1
	}

	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationScience
		title			= #GENERIC_REQ_1
	}
	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked

		partModule = ModuleDockingNode
	}

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CED_Contracts	= $CED_Contracts + 1
		}
	}	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  
    PARAMETER
    {
        name 		= ResupplyLife
        type 		= VesselParameterGroup
        title 		= #StationLifeResupply_9


		PARAMETER
		{	
			name = NewVessel
			type = NewVessel
			title = #StationLifeResupply_11
			hideChildren = true
		}			

        //Check for a Docking Port
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			
			partModule = ModuleDockingNode
			minCount = 1
		}
		PARAMETER:NEEDS[USILifeSupport]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Supplies
			minQuantity 	= 10
			title			= #StationLifeResupply_18
		}
		PARAMETER:NEEDS[IFILifeSupport]
		{
			name			= HasResource
			type			= HasResource
			resource 		= LifeSupport
			minQuantity 	= 10
			title			= #StationLifeResupply_18
		}
		PARAMETER:NEEDS[Snacks]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Snacks
			minQuantity 	= 10
			title			= #StationLifeResupply_18
		}
		PARAMETER:NEEDS[TACLifeSupport]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Food
			minQuantity 	= 10
			title			= #StationLifeResupply_18
		}		
		PARAMETER:NEEDS[Kerbalism]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Food
			minQuantity 	= 10
			title			= #StationLifeResupply_18
		}		
		PARAMETER:NEEDS[Kerbalism]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Water
			minQuantity 	= 10
			title			= #StationLifeResupply_18
		}				
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = @/targetVessel1
			distance = 100
			title = #StationLifeResupply_13
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			vessel = @/targetVessel1
			title = #StationLifeResupply_12
			hideChildren = true
			completeInSequence = true
		}				
		PARAMETER:NEEDS[USILifeSupport]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Supplies
			minQuantity 	= @/lifeSupplies
			title			= #StationLifeResupply_18
			completeInSequence = true
		}
		PARAMETER:NEEDS[IFILifeSupport]
		{
			name			= HasResource
			type			= HasResource
			resource 		= LifeSupport
			minQuantity 	=  @/lifeSupplies
			title			= #StationLifeResupply_18
			completeInSequence = true
		}
		PARAMETER:NEEDS[Snacks]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Snacks
			minQuantity 	=  @/lifeSupplies
			title			= #StationLifeResupply_18
			completeInSequence = true
		}
		PARAMETER:NEEDS[TACLifeSupport]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Food
			minQuantity 	=  @/lifeSupplies
			title			= #StationLifeResupply_18
			completeInSequence = true
		}		
		PARAMETER:NEEDS[Kerbalism]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Food
			minQuantity 	=  @/lifeSupplies
			title			= #StationLifeResupply_18
			completeInSequence = true
		}		
		PARAMETER:NEEDS[Kerbalism]
		{
			name			= HasResource
			type			= HasResource
			resource 		= Water
			minQuantity 	=  @/lifeWater
			title			= #StationLifeResupply_18
			completeInSequence = true
		}	
	}
	
}	