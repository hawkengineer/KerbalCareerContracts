/ Contract Objectives:
//		1)  Add a power module to existing space station
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= StationResupplyMono
	sortKey				= 220
	group				= Colonization Exploration Division
	agent				= Colonization Exploration Division
	title				= #SpaceResupplyMono_1
	genericTitle		= #SpaceResupplyMono_2
	synopsis			= #SpaceResupplyMono_3
	description			= #SpaceResupplyMono_4
	genericDescription 	= #SpaceResupplyMono_5
	minExpiry			= 5.0
	maxExpiry			= 14.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #SpaceResupplyMono_6
	maxCompletions		= 0
	maxSimultaneous		= 4
	//
	targetBody			= @/targetBody1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.5 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 1.5 
	advanceFunds		= @KerbalCareerContracts:baseAdv * 1.0 
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------
	//
	DATA
    {
        type 			= Vessel
		uniquenessCheck = CONTRACT_ACTIVE
		requiredValue 	= true
        targetVessel1 	= AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.CrewCapacity() > 0 && (v.ResourceQuantity(MonoPropellant) / v.ResourceCapacity(MonoPropellant) ) <=0.25 ).SelectUnique()
		title 			= #SpaceResupplyMono_7
    } 

	DATA
	{
		type 			= CelestialBody
		requiredValue 	= true
		targetBody1 	= @/targetVessel1.CelestialBody()
		hidden 			= true
	}

	DATA
	{	
		type 				= Double
		requiredValue 		= true
		title				= #SpaceResupplyMono_8
		curMono				= @/targetVessel1.ResourceQuantity(MonoPropellant)
		capMono				= @/targetVessel1.ResourceCapacity(MonoPropellant)
		curSpace			= @/capMono - @/curMono
		perMono				= @/curMono / @/capMono
	}


 	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//	
	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationCore
		title			= #GENERIC_REQ_1
	}

	REQUIREMENT
	{
		name			= CompleteContract
		type			= CompleteContract
		contractType 	= SpaceStationScience
		title			= #GENERIC_REQ_1
	}
	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked

		partModule = ModuleDockingNode
	}
	REQUIREMENT
	{
		name		= RCSPercentage
		type		= Expression
		title		= #SpaceResupplyMono_8-2
		expression	= @/perMono < 0.25
	}	

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CED_Contracts	= $CED_Contracts + 1
		}
	}	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  
    PARAMETER
    {
        name 		= MonoPropellantResupply
        type 		= VesselParameterGroup
        title 		= #SpaceResupplyMono_9

		PARAMETER
		{	
			name = NewVessel
			type = NewVessel
			title = #SpaceResupplyMono_11
			hideChildren = true
		}			

        //Check for a Docking Port
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			
			partModule = ModuleDockingNode
			minCount = 1
		}
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = @/targetVessel1
			distance = 100
			title = #SpaceResupplyMono_13
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			vessel = @/targetVessel1
			title = #SpaceResupplyMono_12
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name				= HasResourceCapacity
			type				= HasResourceCapacity
			resource			= MonoPropellant
			minQuantity  		= @/curSpace
			title				= #SpaceResupplyMono_17
			completeInSequence 	= true
		}
		
	}

	//Begins a 1-day countdown. Station must be in orbit for 1 days for contract to complete
	PARAMETER
	{
		name 			= Duration
		type 			= Duration
		duration 		= 1d
		preWaitText 	= #SpaceResupplyMono_14
		waitingText 	= #SpaceResupplyMono_15
		completionText 	= #SpaceResupplyMono_16
		startCriteria 	= PARAMETER_COMPLETION
		parameter 		= MonoPropellantResupply
	}
	
}	