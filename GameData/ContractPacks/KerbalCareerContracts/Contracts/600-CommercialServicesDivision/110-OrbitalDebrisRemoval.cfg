//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= OrbitalDebrisRemoval
	sortKey				= 110
	group				= Commercial Services Division
	agent				= Commercial Services Division
	title				= #DebrisSat_1
	genericTitle		= #DebrisSat_2
	synopsis			= #DebrisSat_3
	description			= #DebrisSat_4
	genericDescription 	= #DebrisSat_5
	minExpiry			= 5.0
	maxExpiry			= 60.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #DebrisSat_6
	maxCompletions		= 0
	maxSimultaneous		= 2
	//
	targetBody			= @/targetBody1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.7 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 0.8 * @/xfactor
	advanceFunds		= @KerbalCareerContracts:baseAdv * 0.5 * @/xfactor
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------

	DATA
	{
		type				= List<Vessel>
		requiredValue		= false
		debrisList			= AllVessels().Where(v => v.VesselType() == Debris && v.IsOrbiting() )
		
	}
	DATA
	{
		type				= CelestialBody
		targetBody1			= @/targetDebris.CelestialBody()
		title				= #GENERIC_BODY
	}		
    DATA
    {
        type 			= Vessel
		requiredValue 	= false
		uniquenessCheck = CONTRACT_ACTIVE
        targetDebris	= @/debrisList.SelectUnique()
    }
	DATA
	{
		type = float
		xfactor = Random(3, 5)
		//
	}
	DATA
	{
		type = int
		var1 = Random(1, 3)
	}
	
	//	
	// Contract Requirements --------------------------------------------------------------------------------------------------
	
    REQUIREMENT
    {
        type = Expression
        title = #DebrisSat_9
        expression = @/debrisList.Count() >= 1
    }
	REQUIREMENT
	{
		name			= PartUnlocked
		type			= PartUnlocked
		part		 	= GrapplingDevice
		title			= #DebrisSat_12
	}	


	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CSD_Contracts	= $CSD_Contracts + 1
		}
	}
	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  
	PARAMETER
	{
		name 					= LaunchContract
		type 					= VesselParameterGroup
		title 					= #DebrisSat_10
		disableOnStateChange 	= false
		define 					= DebrisSat
		
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
			title 		= #GENERIC_NT_PB
		}
		PARAMETER
		{
			name	= HasCrew
			type	= HasCrew
			minCrew	= 0
			maxCrew	= 0
		}
		PARAMETER
		{
			name 			= Antenna
			type 			= PartValidation
			partModuleType 	= Antenna
		}				
		PARAMETER
		{
			name 			= Generator
			type 			= PartValidation
			partModuleType 	= Generator				
		}				
		PARAMETER
		{
			name 			= Generator
			type 			= PartValidation
			part		 	= GrapplingDevice				
		}						
		PARAMETER
        {
            name 			= ReachState
            type 			= ReachState
 			situation 		= ORBITING
			targetBody		= @/targetBody
			title 			= #DebrisSat_11
		}
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			distance = 100
			title = #AutoDocking_12
			hideChildren = true
			vessel = @/targetDebris
			completeInSequence = true
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			title = #AutoDocking_13
			vessel = @/targetDebris
			completeInSequence = true
		}		
		PARAMETER
		{
			name 	= Any
			type	= Any
			//
			PARAMETER
			{
				name 	= VesselDestroyed
				type	= VesselDestroyed
			}
			PARAMETER
			{
				name	= RecoverVessel
				type	= RecoverVessel
			}
		}


    }
			
	
		
}