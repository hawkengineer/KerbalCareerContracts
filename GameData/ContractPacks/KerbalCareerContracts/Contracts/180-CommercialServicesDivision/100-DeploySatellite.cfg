// Contract Objectives:
//		1) Build, Launch, and Deploy Satellite for Commercial Vendor - To Make Money
//		
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= DeploySatelliteContract
	sortKey				= 100
	group				= Commercial Services Division
	agent				= Commercial Services Division
	title				= #DeploySat_1
	genericTitle		= #DeploySat_2
	synopsis			= #DeploySat_3
	description			= #DeploySat_4
	genericDescription 	= #DeploySat_5
	minExpiry			= 5.0
	maxExpiry			= 60.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	completedMessage	= #DeploySat_6
	maxCompletions		= 0
	maxSimultaneous		= 1
	//
	targetBody			= @/targetBodyValid1
	//
	// Contract Reweards
	// Possible values are: Trivial , Significant , Exceptional 
	//
	prestige			= Trivial									
	rewardScience		= @KerbalCareerContracts:rewardScience * 0.01
	rewardReputation	= @KerbalCareerContracts:rewardRep * 0.7 	
	rewardFunds			= @KerbalCareerContracts:baseComp * 0.8 * @/xfactor
	advanceFunds		= @KerbalCareerContracts:baseAdv * 0.5 * @/xfactor
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------

	DATA
	{
		type				= List<CelestialBody>
		hidden				= true
		orbitBodiesTarget	= OrbitedBodies().Where(cb => cb !=Sun() )
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		uniquenessCheck	 	= CONTRACT_ACTIVE
		targetBodyValid1	= @/orbitBodiesTarget.Random()
		title				= #GENERIC_BODY
	}		
	DATA
	{
		type				= List<AvailablePart>
		requiredValue		= false
		sciencePartsTmp1	= AllParts()
		sciencePartsTmp2	= @/sciencePartsTmp1.Where(sp => sp.Category() == Science && sp.IsUnlocked() )
		scienceParts		= @/sciencePartsTmp2.Random(2)
	}
	DATA
	{
		type				= AvailablePart
		requiredValue		= false
		sciencePart1		= @/scienceParts.First()
		sciencePart2		= @/scienceParts.Last()
	}
	DATA
	{
		type = float
		xfactor = Random(3, 5)
		//
	}
	DATA
	{
		type = int
		var1 = Random(1, 3)
	}
	
	//	
	// Contract Requirements --------------------------------------------------------------------------------------------------
	
    REQUIREMENT
    {
        type = Expression
        title = #DeploySat_9
        expression = @/orbitBodiesTarget.Count() >= 1
    }
    REQUIREMENT
    {
        type = Expression
        title = #DeploySat_10
        expression = @/scienceParts.Count() == 2
    }	
	REQUIREMENT
	{
		name 			= CompleteContract
		type 			= CompleteContract
		contractType 	= SunOrbit
		title 			= #GENERIC_REQ_1
	}

	// Contract BEHAVIOUR -----------------------------------------------------------------------------------------------------
	//
	//  Count the number of Contracts Completed for the division
	//
	BEHAVIOUR
	{
		name	= Expression
		type	= Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			CSD_Contracts	= $CSD_Contracts + 1
		}
	}
	BEHAVIOUR
	{
		name = OrbitGenerator
		type = OrbitGenerator
		RANDOM_ORBIT
		{
			type = RANDOM
			altitudeFactor 		= 0.9
			inclinationFactor 	= 0.8
				
		}
	}
	BEHAVIOUR
	{
		name = ChangeVesselOwnership
		type = ChangeVesselOwnership
		
		onState = CONTRACT_SUCCESS
		vessel = RandomSat
		owned = false
	}


	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	//  
	PARAMETER
	{
		name 					= LaunchContract
		type 					= VesselParameterGroup
		title 					= Contract to Deploy Satellite for Commercial Company
		disableOnStateChange 	= false
		define 					= RandomSat
		
		PARAMETER
		{
			name	= NewVessel
			type	= NewVessel
			title	= #GENERIC_NV
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
			title 		= #GENERIC_NT_PB
		}
		PARAMETER
		{
			name	= HasCrew
			type	= HasCrew
			minCrew	= 0
			maxCrew	= 0
		}
		PARAMETER
		{
			name 			= SciencePart1
			type 			= PartValidation
			part		 	= @/scienceParts.First()
		}		
		PARAMETER
		{
			name 			= SciencePart2
			type 			= PartValidation
			part		 	= @/scienceParts.Last()
		}		
		PARAMETER
		{
			name 			= Antenna
			type 			= PartValidation
			partModuleType 	= Antenna
		}				
		PARAMETER
		{
			name 			= Generator
			type 			= PartValidation
			partModuleType 	= Generator				
		}				
		PARAMETER
		{
			name = ReachSpecificOrbit
			type = ReachSpecificOrbit
			index = 0
			deviationWindow = 1.5
			title = Achieved the mission orbit!
		}
		PARAMETER
		{
			name 		= Duration
			type		= Duration
			duration	= 1h			
			preWaitText	= #GENERIC_PreText
			waitingText	= #GENERIC_WaitText
			completionText = #GENERIC_CompText
			completeInSequence = true
		}
		PARAMETER
		{
			name		= HasResource
			type		= HasResource
			resource	= ElectricCharge
			minQuantity = 5
			title		= #GENERIC_Power
			completeInSequence = true
		}		
	}
}